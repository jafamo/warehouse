<?php

namespace ContainerESpBA67;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getConfigureRabbitMqCommandService extends CodelyTv_Apps_Mooc_Backend_MoocBackendKernelTestDebugContainer
{
    /**
     * Gets the private 'CodelyTv\Apps\Mooc\Backend\Command\DomainEvents\RabbitMq\ConfigureRabbitMqCommand' shared autowired service.
     *
     * @return \CodelyTv\Apps\Mooc\Backend\Command\DomainEvents\RabbitMq\ConfigureRabbitMqCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 7).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/DomainEvents/RabbitMq/ConfigureRabbitMqCommand.php';

        $container->privates['CodelyTv\\Apps\\Mooc\\Backend\\Command\\DomainEvents\\RabbitMq\\ConfigureRabbitMqCommand'] = $instance = new \CodelyTv\Apps\Mooc\Backend\Command\DomainEvents\RabbitMq\ConfigureRabbitMqCommand(($container->privates['CodelyTv\\Shared\\Infrastructure\\Bus\\Event\\RabbitMq\\RabbitMqConfigurer'] ?? $container->load('getRabbitMqConfigurerService')), $container->getEnv('RABBITMQ_EXCHANGE'), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['CodelyTv\\Mooc\\CoursesCounter\\Application\\Increment\\IncrementCoursesCounterOnCourseCreated'] ?? $container->load('getIncrementCoursesCounterOnCourseCreatedService'));
        }, 1));

        $instance->setName('codely:domain-events:rabbitmq:configure');
        $instance->setDescription('Configure the RabbitMQ to allow publish & consume domain events');

        return $instance;
    }
}
