<?php

namespace ContainerESpBA67;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPublishDomainEventsFromMutationsCommandService extends CodelyTv_Apps_Mooc_Backend_MoocBackendKernelTestDebugContainer
{
    /**
     * Gets the private 'CodelyTv\Apps\Mooc\Backend\Command\DomainEvents\PublishDomainEventsFromMutationsCommand' shared autowired service.
     *
     * @return \CodelyTv\Apps\Mooc\Backend\Command\DomainEvents\PublishDomainEventsFromMutationsCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 7).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/DomainEvents/PublishDomainEventsFromMutationsCommand.php';

        $container->privates['CodelyTv\\Apps\\Mooc\\Backend\\Command\\DomainEvents\\PublishDomainEventsFromMutationsCommand'] = $instance = new \CodelyTv\Apps\Mooc\Backend\Command\DomainEvents\PublishDomainEventsFromMutationsCommand(($container->services['Doctrine\\ORM\\EntityManager'] ?? $container->load('getEntityManagerService')), ($container->privates['CodelyTv\\Shared\\Infrastructure\\Bus\\Event\\WithMonitoring\\WithPrometheusMonitoringEventBus'] ?? $container->load('getWithPrometheusMonitoringEventBusService')));

        $instance->setName('codely:domain-events:generate-from-mutations');
        $instance->setDescription('Publish domain events from mutations');

        return $instance;
    }
}
